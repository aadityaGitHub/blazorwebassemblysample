@page "/"
@page "/user/{id:int}"
@using AtndTrackBlazorApp.Shared.Models;
@using AtndTrackBlazorApp.Shared;

@inject HttpClient _httpClient;
@inject NavigationManager router;
<h3>AddUser</h3>

<EditForm Model="@user" OnValidSubmit="Save">
    <fieldset>
        <div>Personal Details</div>
        <hr />
        <div class="card">
            <div class="top-heading px-4">
                <div class="text-heading col-6 float-left">
                    <h5>Add User</h5>
                </div>
                <div class="button-heading  col-6 float-right">
                    <button type="submit" class="btn-sm btn-primary"><span class=" oi oi-clipboard" aria-hidden="true"></span>&nbsp;Submit</button>
                    <NavLink class="btn-sm btn-secondary btnCancel" href="Employee">
                        <span class="oi oi-arrow-left" aria-hidden="true"></span>&nbsp;Cancel
                    </NavLink>&nbsp;
                </div>
            </div>
            <div class="card-body col-sm-12">

                <DataAnnotationsValidator />
                <fieldset>
                    <div>Personal Details</div>
                    <hr />
                    <div class="row col-12">
                        <div class="col-6 float-left">
                            <div class="form-row">
                                <label class="col-md-4 col-form-label-sm">User Name</label>
                                <div>
                                    <InputText class="form-control-sm" @bind-Value="user.UserName" />
                                    <ValidationMessage class="alert-danger" For="@(() => user.UserName)" />
                                </div>
                            </div>
                            <div class="form-row">
                                <label class="col-md-4 col-form-label-sm"> Name</label>
                                <div>
                                    <InputText class="form-control-sm" @bind-Value="user.Name" />
                                </div>
                            </div>
                            <div class="form-row">
                                <label class="col-md-4 col-form-label-sm">Email</label>
                                <div>
                                    <InputText class="form-control-sm" @bind-Value="user.Email" />
                                    <ValidationMessage class="alert-danger" For="@(() => user.Email)" />
                                </div>
                            </div>
                            <div class="form-row">
                                <label class="col-md-4 col-form-label-sm">Password</label>
                                <div>
                                    <InputText type="password" class="form-control-sm" @bind-Value="user.Password" />
                                    <ValidationMessage class="alert-danger" For="@(() => user.Password)" />
                                </div>
                            </div>
                            <div class="form-row">
                                <label class="col-md-4 col-form-label-sm">Password</label>
                                <div>
                                    <InputText type="password" class="form-control-sm" @bind-Value="user.ConfirmPassword" />
                                    <ValidationMessage class="alert-danger" For="@(() => user.ConfirmPassword)" />
                                </div>
                            </div>
                            <div class="form-row">
                                <label class="col-md-4 col-form-label-sm">Role</label>
                                <div>
                                    <select class="form-control-sm" @bind="user.RoleId">
                                        @foreach (var item in roles)
                                        {
                                            <option value="@item.RoleId">@item.Name</option>
                                        }
                                    </select>
                                    <ValidationMessage class="alert-danger" For="@(() => user.RoleId)" />
                                </div>

                            </div>
                        </div>

                    </div>
                </fieldset>
            </div>
        </div>
    </fieldset>
</EditForm>
@code {
    [Parameter]
    public int id { get; set; }
    private UserModel user = new UserModel();
    private RoleModel[] roles = new List<RoleModel>().ToArray();

    protected override async Task OnInitializedAsync()
    {
        user.Id = id;
        var usersLst = await _httpClient.GetJsonAsync<UserModel[]>("api/user").ConfigureAwait(false);
        user = usersLst?.FirstOrDefault(o => o.Id == id) ?? new UserModel() { Id = id };
        var result = await _httpClient.GetJsonAsync<RoleModel[]>("api/Organization/Roles").ConfigureAwait(false);
        if (result != null) { roles = result; }
    }

    private async Task Save()
    {
        try
        {
            Console.WriteLine("IN Save User");
            user.Id = id;
            user.ClientUrl = router.ToAbsoluteUri(router.Uri).ToString();
            Console.WriteLine(router.ToAbsoluteUri(router.Uri));

            var result = await _httpClient.PostJsonAsync<CommandResult<bool>>("api/User", user).ConfigureAwait(false);
            if (result.Status)
                router.NavigateTo("/user");
        }
        catch (Exception ex)
        {

            throw;
        }
    }
}

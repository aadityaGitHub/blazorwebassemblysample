@page "/leaverequest/{id:int}"
@using AtndTrackBlazorApp.Shared.Models;
@using AtndTrackBlazorApp.Shared;
@using System.Linq;
@using BlazorDateRangePicker;
@inject HttpClient _httpClient;
@inject NavigationManager router;
<EditForm Model="@LeaveRequestModel" OnValidSubmit="SaveLeaveRequest">
    <div class="card">
        <div class="top-heading px-4">
            <div class="text-heading col-6 float-left">
                <h5>Add Leave Requests</h5>
            </div>
            <div class="button-heading  col-6 float-right">
                <a type="submit" class="btn-sm btn-success"><span class=" oi oi-clipboard" aria-hidden="true"></span>&nbsp;Submit</a>
                <NavLink class="btn-sm btn-secondary btnCancel" href="LeaveRequest">
                    <span class="oi oi-arrow-left" aria-hidden="true"></span>&nbsp;Cancel
                </NavLink>&nbsp;
            </div>
        </div>
        <div class="card-body col-sm-12">
            @*<div>
                <div class="row col-12">
                    <div class="text-right col-8">
                    </div>
                </div>
            </div>*@
            <DataAnnotationsValidator />
            <ValidationSummary />
            <fieldset>
                <div class="row col-12">
                    <div class="col-6 float-left">
                        <div class="form-row">
                            <label class="col-md-4 col-form-label-sm">Reporting To</label>
                            <div class="col-md-8">
                                <select class="form-control-sm col-9" @bind="LeaveRequestModel.EmployeeId">
                                    <option value="">--Select--</option>
                                    @if (EmployeeModels != null)
                                    {
                                        @foreach (var item in EmployeeModels)
                                        {
                                            <option value="@item.Id">@item.FirstName</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="form-row">
                            <label class="col-md-4 col-form-label-sm">Leave Type</label>
                            <div class="col-md-8">
                                <select class="form-control-sm col-9" @bind="LeaveRequestModel.LeaveTypeId">
                                    <option value="0">--Select--</option>
                                    @foreach (var item in Enum.GetNames(typeof(LeaveTypes)))
                                    {
                                        <option value="@((int)Enum.Parse(typeof(LeaveTypes),item))">@item</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="form-row">
                            <label class="col-md-4 col-form-label-sm">Email AlertTo</label>
                            <div class="col-md-8">
                                <InputText class="form-control-sm col-9" @bind-Value="LeaveRequestModel.EamilAlertTo" />
                            </div>
                        </div>
                        <div class="form-row">
                            <label class="col-md-4 col-form-label-sm">Leave Status</label>
                            <div class="col-md-8">
                                <select class="form-control-sm col-9" @bind="LeaveRequestModel.Status">
                                    <option value="">--Select--</option>
                                    @foreach (var item in Enum.GetNames(typeof(LeaveStatusTypes)))
                                    {
                                        <option value="@item">@item</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="form-row">
                            <label class="col-md-4 col-form-label-sm">Date</label>
                            <div class="col-md-8">

                                <DateRangePicker class="form-control-sm col-9" @bind-StartDate="LeaveRequestModel.DateFrom" @bind-EndDate="LeaveRequestModel.DateTo" />
                            </div>
                        </div>
                        <div class="form-row">
                            <label class="col-md-4 col-form-label-sm">Reason</label>
                            <div class="col-md-8">
                                <InputText class="form-control-sm col-9" @bind-Value="LeaveRequestModel.Reason" />
                            </div>
                        </div>
                    </div>

                </div>
            </fieldset>
            </div>
        </div>
</EditForm>

@code {
    [Parameter]
    public int id { get; set; }
    DateTimeOffset? DateFrom { get; set; } = DateTime.Today.AddMonths(-1);
    DateTimeOffset? DateTo { get; set; } = DateTime.Today.AddDays(1).AddTicks(-1);
    private LeaveRequestModel LeaveRequestModel = new LeaveRequestModel();
    private EmployeeModel[] EmployeeModels = new List<EmployeeModel>().ToArray();

    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine("IN Save Dept");
        if (id != default(int))
        {
            LeaveRequestModel.Id = id;
            var result = await _httpClient.GetJsonAsync<LeaveRequestModel[]>("api/LeaveRequest").ConfigureAwait(false);
            if (result != null) { LeaveRequestModel = result.FirstOrDefault(o => o.Id == id); }
        }
        else
        {
            LeaveRequestModel.DateFrom  = DateTime.Today.AddMonths(-1);
            LeaveRequestModel.DateTo  = DateTime.Today.AddDays(1).AddTicks(-1);
        }
        var response = await _httpClient.GetJsonAsync<EmployeeModel[]>("api/Employee").ConfigureAwait(false);
        Console.WriteLine("respnose " + System.Text.Json.JsonSerializer.Serialize(response));
        EmployeeModels = response;
    }

    private async Task SaveLeaveRequest()
    {
        Console.WriteLine("IN Save Dept");
        LeaveRequestModel.Id = id;
        var result = await _httpClient.PostJsonAsync<bool>("api/LeaveRequest", LeaveRequestModel).ConfigureAwait(false);
        if (result) router.NavigateTo("/LeaveRequest");
    }
}
